# Test Shop Management API with curl commands
# Replace ADMIN_TOKEN with actual admin token

# 1. Get all shops
curl -X GET "https://localhost:7000/api/shops" \
  -H "Authorization: Bearer ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -k

# 2. Get active shops only (OData filter)
curl -X GET "https://localhost:7000/api/shops?$filter=isActive eq true" \
  -H "Authorization: Bearer ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -k

# 3. Get banned shops only (OData filter)
curl -X GET "https://localhost:7000/api/shops?$filter=isActive eq false" \
  -H "Authorization: Bearer ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -k

# 4. Get shops with search by name (OData filter)
curl -X GET "https://localhost:7000/api/shops?$filter=contains(name,'Tech')" \
  -H "Authorization: Bearer ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -k

# 5. Get shops with ordering (OData orderby)
curl -X GET "https://localhost:7000/api/shops?$orderby=createdAt desc" \
  -H "Authorization: Bearer ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -k

# 6. Get shops with pagination (OData top/skip)
curl -X GET "https://localhost:7000/api/shops?$top=5&$skip=0" \
  -H "Authorization: Bearer ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -k

# 7. Get specific shop by ID
curl -X GET "https://localhost:7000/api/shops/1" \
  -H "Authorization: Bearer ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -k

# 8. Ban shop (set isActive = false)
curl -X PUT "https://localhost:7000/api/shops/1/status" \
  -H "Authorization: Bearer ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{"shopId": 1, "isActive": false}' \
  -k

# 9. Check shop status after ban
curl -X GET "https://localhost:7000/api/shops/1" \
  -H "Authorization: Bearer ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -k

# 10. Unban shop (set isActive = true)
curl -X PUT "https://localhost:7000/api/shops/1/status" \
  -H "Authorization: Bearer ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{"shopId": 1, "isActive": true}' \
  -k

# 11. Check shop status after unban
curl -X GET "https://localhost:7000/api/shops/1" \
  -H "Authorization: Bearer ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -k

# 12. Test with invalid shop ID (should return 404)
curl -X PUT "https://localhost:7000/api/shops/999/status" \
  -H "Authorization: Bearer ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{"shopId": 999, "isActive": false}' \
  -k

# 13. Test with invalid request body (should return 400)
curl -X PUT "https://localhost:7000/api/shops/1/status" \
  -H "Authorization: Bearer ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{"shopId": 1, "isActive": "invalid"}' \
  -k

# 14. Test without authorization (should return 401)
curl -X PUT "https://localhost:7000/api/shops/1/status" \
  -H "Content-Type: application/json" \
  -d '{"shopId": 1, "isActive": false}' \
  -k
